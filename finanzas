"""
The price of one share at time t will be denoted by S(t), 
The current stock price S(0) is known to all investors, 
but the future price S(1) remains uncertain: it may go 
up as well as down. The diﬀerence S(1) − S(0) as a fraction of the initial value 
represents the so-called rate of return, or brieﬂy return:
"""
function rate_of_return_ks(n, a)
    """
    la tasa de retorno: n es igual al precio de las acciones en futuro s(1),
    a es igual al precio de la accion.
    """
    n = trunc(Int64, n)
    a = trunc(Int64, a)
    ks = (n-a)
    kd = (ks/a)
    print(kd)
end
"""
As an alternative to keeping money in a bank, investors may choose to invest 
in bonds. The price of one bond at time t will be denoted by A(t).
The current bond price A(0) is known to all investors.
"""
function The_return_on_bonds(n, a)
    """
    el precio de un bono. n es igual al precio del bono A(1) los 2 valores si el
    valor sube o baja, la variable a es igual al valor del bono con que inicias(tu inversion)
    """
    n = trunc(Int64, n)
    a = trunc(Int64, a)
    ks = (n-a)
    kd = (ks/a)#cambiar la operacion
    print(kd)
end
"""
Assumption 1.1 (Randomness)
The future stock price S(1) is a random variable with at least two diﬀerent 
values. The future price A(1) of the risk-free security is a known number.
Assumption 1.2 (Positivity of Prices)
All stock and bond prices are strictly positive,
A(t) > 0 and S(t) > 0 for t = 0, 1.
The total wealth of an investor holding x stock shares and y bonds at a time instant t = 0, 1 is
V(t) = xS(t) + yA(t).
The pair (x, y) is called a portfolio, V (t) being the value of this portfolio or, in other words, 
the wealth of the investor at time t. The jumps of asset prices between times 0 and 1 give rise to 
a change of the portfolio value:
V (1) − V (0) = x(S(1) − S(0)) + y(A(1) − A(0)).
This diﬀerence (which may be positive, zero, or negative) as a fraction of the initial value represents 
the return on the portfolio.
"""
function the_return_on_the_portfolio(n, a)
    """
    el rendimiento del portafolio. n es igual al valor de la cartera en v(1) los 2 valores si el
    valor sube o baja, la variable a es igual al valor de la cartera con que empiezas (tu inversion).
    kv
    """
    n = trunc(Int64, n)
    a = trunc(Int64, a)
    ks = (n-a)
    kd = (ks/a)#cambiar la operacion
    print(kd)
end

#Exercise 1.1
"""
Let A(0) = 90, A(1) = 100, S(0) = 25 dollars and let
    s(1) = (30up, 20down)
    where 0 < p < 1. For a portfolio with x = 10 shares and y = 15 bonds
calculate V (0), V (1) and K V
"""
#primero calculamos v(0) the tiemp t=0,1
"""
s es igual a s(0) el precio de una accion, x es igual a una accion, y es igual a un bono,
a₁ es igual a el precio de un bono en tiempo 1 A(1), a₂ es igual a el precio de un bono A(0),
s₁ y s₂: es igual al precio de las acciones en futuro s(1)
"""

s = 25
x = 10
y = 15
a₁ = 100
a₂ = 90
s₁= 30 
s₂ = 20
function v_time(x, y, s, a₂)
    """
    riqueza actual de un inversor en tiempo v(0)
    """
    global (vt)
    vt = x*(s) + y*(a₂)
    ("$(vt)")
    r = "$vt riqueza total"
end

#calculamos v(1) tiempo
function v_time1(x, y)
    """
    calculamos el valor de la riqueza en "un año"
    s,z son los valores de s(1) precios con probabilidad p y 1-p
    """
    global vs, vz
    vs = x*(s₁) + y*(a₁)
    vz = x*(s₂) + y*(a₁)
    for s₁ in vs 
       ("$(vs)")
        
    end
    for s₂ in vz 
        ("$(vz)")
       
    end
    r = "$vs if stock goesup", "$vz if stock goesdown"
end
 
function rend_kv()
    """
    calculamos el rendimiento de la cartera con los valores de el valor de
    la cartera en v(1)
    """
    kv = (vs-vt)/vt
    kv2 = (vz-vt)/vt
   
    r = "$kv if stock goesup", "$kv2 if stock goesdown"
end

println(v_time(x, y, s, a₂))
println(v_time1(x, y))
println(rend_kv())

